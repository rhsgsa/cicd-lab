schemaVersion: 2.1.0
metadata:
  name: golang
attributes:
  controller.devfile.io/devworkspace-config:
    name: devworkspace-config
    namespace: openshift-operators
  controller.devfile.io/scc: container-build
  controller.devfile.io/storage-type: per-user
projects:
  - name: golang-health-check
    zip:
      location: http://devfile-registry.openshift-operators.svc:8080/resources/v2/golang-health-check.zip
components:
  - container:
      cpuLimit: '1'
      cpuRequest: '0.5'
      endpoints:
        - exposure: public
          name: health-check-endpoint
          protocol: http
          targetPort: 8080
      env:
        - name: GOCACHE
          value: /tmp/.cache
        - name: CHE_DASHBOARD_URL
          value: https://devspaces.apps.cluster-xxxx.dynamic.opentlc.com
        - name: CHE_PLUGIN_REGISTRY_URL
          value: https://devspaces.apps.cluster-xxxx.dynamic.opentlc.com/plugin-registry/v3
        - name: CHE_PLUGIN_REGISTRY_INTERNAL_URL
          value: http://plugin-registry.openshift-operators.svc:8080/v3
        - name: CLUSTER_CONSOLE_URL
          value: https://console-openshift-console.apps.cluster-xxxx.dynamic.opentlc.com
        - name: CLUSTER_CONSOLE_TITLE
          value: OpenShift console
        - name: OPENVSX_REGISTRY_URL
          value: ''
        - name: QUAY_URL
          value: 
      image: registry.redhat.io/devspaces/udi-rhel8@sha256:571ceed7b4b886b7f989ba193fa74ec863600f56f7c0045f3a1af6dadf09f85b
      memoryLimit: 2Gi
      memoryRequest: 1Gi
      mountSources: true
      sourceMapping: /projects
    name: tools
commands:
  - exec:
      commandLine: go build
      component: tools
      group:
        kind: build
      label: 1.Build
      workingDir: ${PROJECTS_ROOT}/golang-health-check
    id: build
  - exec:
      commandLine: ./golang-health-check
      component: tools
      group:
        kind: run
      label: 2.Run
      workingDir: ${PROJECTS_ROOT}/golang-health-check
    id: run
